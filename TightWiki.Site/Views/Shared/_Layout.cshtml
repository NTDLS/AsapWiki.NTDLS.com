@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Config.Title</title>
    @Styles.Render("~/Content/css")
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- BEGIN Syntax Highlighter -->
    <link rel="stylesheet" href="/syntax/styles/default.min.css">
    <script src="/syntax/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>

    <title>@ViewBag.Config.HTMLHeader</title>
    <!-- END Syntax Highlighter -->

    @if (ViewBag.Config.IncludeWikiDescriptionInMeta)
    {
        <meta name="description" content="@ViewBag.Config.PageDescription">
    }

    @if (ViewBag.Config.IncludeWikiTagsInMeta)
    {
        <meta name="keywords" content="@ViewBag.Config.PageTags">
    }
</head>

<body>
    <nav class="navbar navbar-inverse navbar-static-top" role="navigation">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/"><span class="glyphicon"><img src="@ViewBag.Config.BrandImageSmall" /></span> @Html.Raw(ViewBag.Config.Name)</a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
                <ul class="nav navbar-nav">

                    @foreach (TightWiki.Shared.Models.Data.MenuItem item in ViewBag.Config.MenuItems)
                    {
                        <li><a href="@item.Link">@item.Name</a></li>
                    }
                    
                    @{
                        bool showHistory = (@ViewBag.Context.IsPageLoaded == true && @ViewBag.Context.IsAuthenticated);

                        if (@ViewBag.Context.CanModerate)
                        {
                            showHistory = showHistory && @ViewBag.Context.CanModerate;
                        }

                        if (showHistory && @ViewBag.Context.Roles?.Contains(TightWiki.Shared.Library.Constants.Roles.Guest) == true
                            && ViewBag.Config.AllowGuestsToViewHistory == false)
                        {
                            showHistory = false;
                        }
                    }

                    @if (ViewBag.Context.CanCreate
                        || (ViewBag.CreatePage == true && ViewBag.Context.CanCreate)
                        || (ViewBag.Context.IsPageLoaded == true && (showHistory || ViewBag.Context.CanEdit || ViewBag.Context.CanModerate || ViewBag.Context.CanDelete))
                        )
                    {
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Page<span class="caret"></span></a>
                            <ul class="dropdown-menu" aria-labelledby="page">

                                @if (ViewBag.Context.CanEdit && ViewBag.Context.IsPageLoaded == true)
                                {
                                    if (ViewBag.Context.IsViewingOldVersion == false)
                                    {
                                        <li><a href="/Page/Edit/@ViewBag.Config.PageNavigation" class="list-group-item">Edit</a></li>
                                    }
                                }
                                else if (ViewBag.CreatePage == true && ViewBag.Context.CanCreate)
                                {
                                    <li><a href="/Page/Edit/@ViewBag.Config.PageNavigation" class="list-group-item">Create "@ViewBag.Config.PageNavigation"</a></li>
                                }

                                @if (ViewBag.Context.CanCreate)
                                {
                                    <li><a href="/Page/Edit/" class="list-group-item">Create new page</a></li>
                                }

                                @if (ViewBag.Context.CanDelete && ViewBag.Context.IsPageLoaded == true)
                                {
                                    <li><a href="/Page/Delete/@ViewBag.Config.PageNavigation" class="list-group-item">Delete this page</a></li>
                                }

                                @if (showHistory)
                                {
                                    <li><a href="/@ViewBag.Config.PageNavigation/History" class="list-group-item">History</a></li>
                                }

                                @if (ViewBag.Context.IsViewingOldVersion && ViewBag.Context.CanModerate && ViewBag.Context.IsPageLoaded == true)
                                {
                                    <li><a href="/@ViewBag.Config.PageNavigation/revert/@ViewBag.Config.PageRevision" class="list-group-item">Revert to revision @ViewBag.Config.PageRevision</a></li>
                                }

                            </ul>
                        </li>
                    }

                    @if (ViewBag.Context.IsAuthenticated == true && (ViewBag.Context.CanModerate || ViewBag.Context.Roles?.Contains(TightWiki.Shared.Library.Constants.Roles.Administrator) == true))
                    {
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Administration<span class="caret"></span></a>
                            <ul class="dropdown-menu" aria-labelledby="administration">
                                @if (ViewBag.Context.Roles?.Contains(TightWiki.Shared.Library.Constants.Roles.Administrator) == true)
                                {
                                    <li><a href="/Admin/Config" class="list-group-item">Configuration</a></li>
                                    <li><a href="/Admin/Accounts" class="list-group-item">Accounts</a></li>
                                    <li><a href="/Admin/Roles" class="list-group-item">Roles</a></li>
                                    <li><a href="/Admin/Utilities" class="list-group-item">Utilities</a></li>
                                }
                                @if (ViewBag.Context.CanModerate == true)
                                {
                                    <li><a href="/Admin/Pages" class="list-group-item">Pages</a></li>
                                    <li><a href="/Admin/Moderate" class="list-group-item">Moderate</a></li>
                                }
                            </ul>
                        </li>
                    }

                    @if (ViewBag.Context.IsAuthenticated == true)
                    {
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Account<span class="caret"></span></a>
                            <ul class="dropdown-menu" aria-labelledby="account">
                                <li><a href="/User/UserProfile" class="list-group-item">Profile</a></li>
                                <li><a href="/User/ChangePassword" class="list-group-item">Change Password</a></li>
                                <li><a href="/User/Logout" class="list-group-item">Logout</a></li>
                            </ul>
                        </li>
                    }

                    @if (ViewBag.Context.IsAuthenticated == false)
                    {
                        <li><a href="/User/Login?ReturnUrl=@Request.Url.PathAndQuery">Login</a></li>
                    }

                </ul>
            </div>
        </div>
    </nav>

    <div class="container">
        @ViewBag.Config.HTMLPreBody
        @RenderBody()
        @ViewBag.Config.HTMLPostBody
    </div>

    <footer>
        @if (ViewBag.Config.FooterBlurb != null)
        {
        <div class="footer-blurb">
            <div class="container">
                <div class="row">@Html.Raw(ViewBag.Config.FooterBlurb)</div>
            </div>
        </div>
        }
        @if (ViewBag.Config.Copyright != null)
        {
        <div class="small-print">
            <div class="container">
                <p>@Html.Raw(ViewBag.Config.Copyright)</p>
            </div>
        </div>
        }
        @ViewBag.Config.HTMLFooter
    </footer>

    <script src="/js/jquery-1.11.3.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/ie10-viewport-bug-workaround.js"></script>
    <script src="/js/holder.min.js"></script>
</body>
</html>
