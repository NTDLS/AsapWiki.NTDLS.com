@model TightWiki.Models.ViewModels.Admin.NamespacesViewModel
@using TightWiki.Library
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var wikiContext = ViewData["WikiContext"] as TightWiki.WikiContextState ?? throw new Exception("Wiki State Context cannot be null.");
}

<h3>
    Namespaces
</h3>

<p class="text-dark">
    All namespaces contained in the wiki.<br /><br />
</p>

<table class="fixedTable100" border="0" cellpadding="0">
    <tbody>
        <tr>
            <td height="52" valign="middle" align="left">
                @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <div class="alert alert-danger">@Html.Raw(Model.ErrorMessage)</div>
                }
                @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                {
                    <div class="alert alert-success">@Html.Raw(Model.SuccessMessage)</div>
                }

                @using (Html.BeginForm(FormMethod.Get))
                {
                    @if (Model.Namespaces.Count > 0)
                    {
                        <table class="table fixedTable100 table-striped" border="0" cellspacing="0" cellpadding="0">
                            <thead>
                                <tr>
                                    <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "Name")">Name</a></strong></td>
                                    <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "Pages")">Pages</a></strong></td>
                                </tr>
                            </thead>

                            @foreach (var p in Model.Namespaces)
                            {
                                <tr>
                                    <td><a href="/Admin/Namespace/@(p.Namespace?? string.Empty)">@(string.IsNullOrEmpty(p.Namespace) ? "(Default)" : p.Namespace)</a></td>
                                    <td>@p.CountOfPages.ToString("N0")</td>
                                </tr>
                            }
                        </table>

                        @Html.Raw(TightWiki.Library.PageSelectorGenerator.Generate(Context.Request.QueryString, Model.PaginationPageCount))
                    }
                }
            </td>
        </tr>
    </tbody>
</table>
