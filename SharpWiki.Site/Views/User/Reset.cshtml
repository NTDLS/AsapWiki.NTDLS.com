@model SharpWiki.Shared.Models.View.ResetModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    tr.padded td {
        padding-bottom: 0.5em;
        padding-top: 0.5em;
        padding-left: 0.5em;
        padding-right: 0.5em;
    }
</style>

<div class="jumbotron">
    <h2>Reset account password</h2>
    <font size="4" face="ARIAL,HELVETICA">
        We all forget sometimes.... drop in your email address, temporary code and new password below.<br /><br />
    </font>

    @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
    {
        @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
    }

    <table border="0" width="400" cellpadding="5">
        <tbody>
            <tr>
                <td height="52" valign="middle" align="center">
                    @if (ViewBag.Warninig != null)
                    {
                        <div class="alert alert-warning">@ViewBag.Warninig</div>
                    }
                    @if (ViewBag.Success != null)
                    {
                        <div class="alert alert-success">@ViewBag.Success</div>
                    }

                    @using (Html.BeginForm())
                    {
                        <table border="0">
                            <tr class="padded">
                                <td><strong>@Html.LabelFor(m => m.EmailAddress)</strong></td>
                                <td>
                                    @Html.TextBoxFor(m => m.EmailAddress, new { @class = "input-control" })
                                </td>
                            </tr>
                            <tr><td colspan="2"><div class="text-danger">@Html.ValidationMessageFor(m => m.EmailAddress)</div></td></tr>
                            <tr class="padded">
                                <td><strong>@Html.LabelFor(m => m.TempCode)</strong></td>
                                <td>
                                    @Html.TextBoxFor(m => m.TempCode, new { @class = "input-control" })
                                </td>
                            </tr>
                            <tr><td colspan="2"><div class="text-danger">@Html.ValidationMessageFor(m => m.TempCode)</div></td></tr>
                            <tr class="padded">
                                <td><strong>@Html.LabelFor(m => m.Password)</strong></td>
                                <td>
                                    @Html.PasswordFor(m => m.Password, new { @class = "input-control" })
                                </td>
                            </tr>
                            <tr><td colspan="2"><div class="text-danger">@Html.ValidationMessageFor(m => m.Password)</div></td></tr>
                            <tr class="padded">
                                <td><strong>@Html.LabelFor(m => m.ComparePassword)</strong></td>
                                <td>
                                    @Html.PasswordFor(m => m.ComparePassword, new { @class = "input-control" })
                                </td>
                            </tr>
                            <tr><td colspan="2"><div class="text-danger">@Html.ValidationMessageFor(m => m.ComparePassword)</div></td></tr>
                            <tr class="padded">
                                <td>&nbsp;</td>
                                <td>
                                    <div class="form-group"><button type="submit" class="btn btn-primary rounded-0">Reset</button></div>
                                </td>
                            </tr>
                        </table>
                    }
                </td>
            </tr>
        </tbody>
    </table>
</div>
