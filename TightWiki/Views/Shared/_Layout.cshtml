@using TightWiki;
@{
    var wikiContext = ViewData["WikiContext"] as WikiContextState ?? throw new Exception("Wiki State Context cannot be null.");
    string navBarClass = $"navbar navbar-expand-sm navbar-toggleable-sm {(GlobalSettings.FixedMenuPosition ? "fixed-top" : "")} navbar-light bg-white border-bottom box-shadow mb-3";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@wikiContext.Title</title>

    <!-- Syntax Highlighter:Begin -->
    <script src="/syntax/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>
    <!-- Syntax Highlighter:End -->

    @if (string.IsNullOrWhiteSpace(GlobalSettings.HTMLHeader) == false)
    {
        <!-- HTMLHeader:Begin -->
        @Html.Raw(GlobalSettings.HTMLHeader)
        <!-- HTMLHeader:Begin -->
    }

    @if (GlobalSettings.IncludeWikiDescriptionInMeta)
    {
        <!-- PageDescription:Begin -->
        <meta name="description" content="@wikiContext.PageDescription">
        <!-- PageDescription:Begin -->
    }

    @if (GlobalSettings.IncludeWikiTagsInMeta)
    {
        <!-- PageTags:Begin -->
        <meta name="keywords" content="@wikiContext.PageTags">
        <!-- PageTags:Begin -->
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Theme:Begin -->
    @foreach (var file in wikiContext.UserTheme.Files)
    {
        <link rel="stylesheet" href="@file" />
    }
    <!-- Theme:End-->

    <script src="~/js/site.js" asp-append-version="true"></script>

    <link id="themeStylesheet" rel="stylesheet" href="" />
    <script>
        $(document).ready(function () {
            localStorage.setItem('theme', 'dark');
            $('nav').removeClass('navbar-light bg-white').addClass('@wikiContext.UserTheme.ClassNavBar');
            $('a.nav-link').removeClass('text-dark').addClass('@wikiContext.UserTheme.ClassNavLink');
            $('a.dropdown-item').removeClass('text-dark').addClass('@wikiContext.UserTheme.ClassDropdown');
            $('span.glyphicon').removeClass('text-dark').addClass('@wikiContext.UserTheme.ClassBranding');
        });
    </script>

    @RenderSection("Scripts", required: false)
</head>

<body>
    <header>
        <nav class="@navBarClass">
            <div class="container">
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <a class="navbar-brand" href="/"><span class="glyphicon text-dark"><img src="@GlobalSettings.BrandImageSmall" /> @GlobalSettings.Name</span></a>
                <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                    <ul class="navbar-nav flex-grow-1">
                        @foreach (TightWiki.Models.DataModels.MenuItem item in GlobalSettings.MenuItems)
                        {
                            <li class="nav-item"><a class="nav-link text-dark" href="@item.Link">@item.Name</a></li>
                        }

                        @if (wikiContext.CanCreate == true
                        || (wikiContext.ShouldCreatePage == true && wikiContext.CanCreate == true)
                        || (wikiContext.IsPageLoaded == true && (wikiContext.CanEdit == true || wikiContext.CanModerate == true || wikiContext.CanDelete == true))
                        )
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdownMenuLink" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Page</a>
                                <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">

                                    @if (wikiContext.CanCreate == true)
                                    {
                                        if (wikiContext.ShouldCreatePage == true)
                                        {
                                            <a class="dropdown-item text-dark" href="/@wikiContext.PageNavigation/Page/Create">Create "@wikiContext.PageNavigation"</a>
                                        }

                                        <a class="dropdown-item text-dark" href="/Page/Create">Create new page</a>
                                    }

                                    @if (wikiContext.IsPageLoaded == true)
                                    {
                                        @if (wikiContext.CanCreate == true)
                                        {
                                            <div class="dropdown-divider"></div>
                                        }
                                        if (wikiContext.CanView == true && GlobalSettings.EnablePageComments)
                                        {
                                            <a class="dropdown-item text-dark" href="/@wikiContext.PageNavigation/Comments">Comments</a>
                                        }
                                        if (wikiContext.CanDelete == true)
                                        {
                                            <a class="dropdown-item text-dark" href="/@wikiContext.PageNavigation/Delete">Delete this page</a>
                                        }
                                        if (wikiContext.CanEdit == true && wikiContext.IsViewingOldVersion == false)
                                        {
                                            <a class="dropdown-item text-dark" href="/@wikiContext.PageNavigation/Edit">Edit</a>
                                        }
                                        if (wikiContext.CanView == true)
                                        {
                                            <a class="dropdown-item text-dark" href="/@wikiContext.PageNavigation/Revisions">Revisions</a>
                                        }
                                        if (wikiContext.CanCreate == true)
                                        {
                                            <a class="dropdown-item text-dark" href="/@wikiContext.PageNavigation/Refresh">Refresh</a>
                                        }
                                        if (wikiContext.CanModerate == true && wikiContext.IsViewingOldVersion == true)
                                        {
                                            <a class="dropdown-item text-dark" href="/@wikiContext.PageNavigation/revert/@wikiContext.PageRevision">Revert to revision @wikiContext.PageRevision</a>
                                        }
                                        if (wikiContext.CanView == true && GlobalSettings.EnablePageComments)
                                        {
                                            <a class="dropdown-item text-dark" href="/@wikiContext.PageNavigation">View</a>
                                        }
                                    }
                                </div>
                            </li>
                        }

                        @if (wikiContext.IsAuthenticated == true && (wikiContext.CanModerate == true || wikiContext.Role == TightWiki.Library.Constants.Roles.Administrator))
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdownMenuLink" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Admin</a>
                                <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                                    @if (wikiContext.Role == TightWiki.Library.Constants.Roles.Administrator)
                                    {
                                        <a class="dropdown-item text-dark" href="/Admin/Accounts">Accounts</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Roles">Roles</a>
                                        <div class="dropdown-divider"></div>
                                        <a class="dropdown-item text-dark" href="/Admin/Config">Configuration</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Emojis">Emojis</a>
                                        <a class="dropdown-item text-dark" href="/Admin/MenuItems">Site Menu</a>
                                        <div class="dropdown-divider"></div>
                                        <a class="dropdown-item text-dark" href="/Admin/SiteStatistics">Site Statistics</a>
                                        <a class="dropdown-item text-dark" href="/Admin/CompilationStatistics">Compilation Statistics</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Exceptions">Exceptions</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Utilities">Utilities</a>
                                        <div class="dropdown-divider"></div>
                                        <a class="dropdown-item text-dark" href="/Admin/OrphanedPageAttachments">Orphaned Attachments</a>
                                        <a class="dropdown-item text-dark" href="/Admin/MissingPages">Missing Pages</a>
                                        <a class="dropdown-item text-dark" href="/Admin/DeletedPages">Deleted Pages</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Moderate">Moderate</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Namespaces">Namespaces</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Pages">Pages</a>
                                    }
                                    else if (wikiContext.CanModerate == true)
                                    {
                                        <a class="dropdown-item text-dark" href="/Admin/MissingPages">Missing Pages</a>
                                        <a class="dropdown-item text-dark" href="/Admin/DeletedPages">Deleted Pages</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Moderate">Moderate</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Namespaces">Namespaces</a>
                                        <a class="dropdown-item text-dark" href="/Admin/Pages">Pages</a>
                                    }
                                </div>
                            </li>
                        }

                        @if (wikiContext.IsAuthenticated == true)
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdownMenuLink" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">My</a>
                                <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                                    <a class="dropdown-item text-dark" href="/Profile/My">Profile</a>
                                    <a class="dropdown-item text-dark" href="/Identity/Account/Manage">Account</a>
                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item text-dark" href="/Identity/Account/Logout?returnUrl=@wikiContext.PathAndQuery">Logout</a>
                                </div>
                            </li>
                        }

                        @if (wikiContext.IsAuthenticated == false)
                        {
                            <li class="nav-item"><a class="nav-link text-dark" href="/Identity/Account/Login?returnUrl=@wikiContext.PathAndQuery">Login</a></li>
                        }

                        @if (GlobalSettings.IncludeSearchOnNavbar)
                        {
                            <li class="nav-item ms-auto">
                                <div class="collapse navbar-collapse justify-content-end">
                                    <form class="d-flex" role="search" method="GET" action="/Page/Search">
                                        <input class="form-control me-2" type="search" placeholder="Search" name="SearchString" aria-label="Search">
                                        <button class="btn btn-outline-success" type="submit">Search</button>
                                    </form>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container" @(GlobalSettings.FixedMenuPosition ? "style=margin-top:80px;" : "")>
        <main role="main" class="pb-3">
            @Html.Raw(GlobalSettings.HTMLPreBody)

            @if (TightWiki.Repository.UsersRepository.AdminPasswordStatus() != TightWiki.Library.Constants.AdminPasswordChangeState.HasBeenChanged)
            {
                <div class="card bg-warning mb-3">
                    <div class="card-header"><strong>Default password has not been changed</strong></div>
                    <div class="card-body">
                        <p class="card-text">
                            The admin password is set to its default value, it is <i>recommended</i> that you change it immediately!<br />
                            <br />
                            You can change this password by logging in, navigating to My -&gt; Account -&gt; Password.<br />
                            <br />
                            <strong>Current admin login:</strong><br />
                            &nbsp;&nbsp;&nbsp;<strong>Username:</strong>"admin@tightwiki.com"<br />
                            &nbsp;&nbsp;&nbsp;<strong>Password:</strong>"@TightWiki.Library.Constants.DEFAULTPASSWORD"<br />
                            <br />
                        </p>
                    </div>
                </div>
            }

            @RenderBody()
            @Html.Raw(GlobalSettings.HTMLPostBody)
        </main>
    </div>

    <div class="container">
        @if (GlobalSettings.FooterBlurb != null || GlobalSettings.Copyright != null)
        {
            <hr class="mt-5 mb-5">

            @if (GlobalSettings.FooterBlurb != null)
            {
                @Html.Raw(GlobalSettings.FooterBlurb)
            }
            @if (GlobalSettings.Copyright != null)
            {
                <br />
                @Html.Raw(GlobalSettings.Copyright)
            }
        }
        @Html.Raw(GlobalSettings.HTMLFooter)
    </div>

</body>
</html>
