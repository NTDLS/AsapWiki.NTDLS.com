@model TightWiki.Shared.Models.View.PageSearchModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    tr.padded td {
        padding-bottom: 0.5em;
        padding-top: 0.5em;
        padding-left: 0.5em;
        padding-right: 0.5em;
    }
</style>

<div class="panel panel-default">
    <div class="panel-heading"><h3>Page Search</h3></div>
    <div class="panel-body">
        <font size="4" face="ARIAL,HELVETICA">
            If it's here, you should be able to find it.<br /><br />
        </font>

        @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
        {
            @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
        }

        @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
        {
            @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
        }

        <table border="0" width="100%" cellpadding="0">
            <tbody>
                <tr>
                    <td height="52" valign="middle" align="center">

                        @if (ViewBag.Error != null)
                        {
                            <div class="alert alert-danger">@ViewBag.Error</div>
                        }
                        @if (ViewBag.Success != null)
                        {
                            <div class="alert alert-success">@ViewBag.Success</div>
                        }

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <table border="0" width="100%" cellspacing="0" cellpadding="5">
                                <tr>
                                    <td width="100%">
                                        @Html.TextBoxFor(x => x.SearchTokens, new { style = "width:100%" })
                                    </td>
                                    <td colspan="2"><button type="submit" class="btn btn-primary rounded-0 btn-sm">Go</button></td>
                                </tr>
                            </table>

                            <table class="table table-striped" border="0" width="100%" cellspacing="0" cellpadding="0">
                                @foreach (var p in Model.Pages)
                                {
                                    <tr>
                                        <td><a href="/@p.Navigation">@p.Name</a> @(String.IsNullOrEmpty(@p.Description) ? "" : " : ")  @p.Description</td>
                                    </tr>
                                }
                            </table>

                            if (@ViewBag.PreviousPage != null)
                            {
                                <a href="/Page/Search/1?Tokens=@Model.SearchTokens">&lt;&lt; First</a>
                                @:&nbsp; | &nbsp;
                                <a href="/Page/Search/@ViewBag.PreviousPage?Tokens=@Model.SearchTokens">&lt; Previous</a>
                            }
                            else
                            {
                                @:&lt;&lt; First &nbsp; | &nbsp; &lt; Previous
                            }
                            @:&nbsp; | &nbsp;

                            if (@ViewBag.NextPage != null)
                            {
                                <a href="/Page/Search/@ViewBag.NextPage?Tokens=@Model.SearchTokens">Next &gt;</a>
                                @:&nbsp; | &nbsp;
                                <a href="/Page/Search/@ViewBag.PaginationCount?Tokens=@Model.SearchTokens">Last &gt;&gt;</a>
                            }
                            else
                            {
                                @:Next &gt; &nbsp; | &nbsp; Last &gt;&gt;
                            }
                        }
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
