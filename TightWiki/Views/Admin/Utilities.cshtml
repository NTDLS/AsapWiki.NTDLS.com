@model TightWiki.Shared.Models.View.UtilitiesModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
}

<div class="card">
    <div class="card-header"><h3>Utilities</h3></div>
    <div class="card-body">
        <font size="4" face="ARIAL,HELVETICA">
            Various wiki administration utilities.<br /><br />
        </font>

        @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
        {
            @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
        }

        @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
        {
            @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
        }

        <table border="0" width="100%" cellpadding="0">
            <tbody>
                <tr>
                    <td height="52" valign="middle" align="center">

                        @if (ViewBag.Error != null)
                        {
                            <div class="alert alert-danger">@ViewBag.Error</div>
                        }
                        @if (ViewBag.Success != null)
                        {
                            <div class="alert alert-success">@ViewBag.Success</div>
                        }

                    <table class="table table-striped" border="0" width="100%" cellspacing="0" cellpadding="0">
                        <tr>
                            <td>Rebuild search cache</td>
                            <td>
                                <form action='/Admin/ConfirmAction?PostBack=/Admin/Utilities' method="post">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="message" value="This will rebuild the search cache for all pages in the wiki. This could take some time! Continue?" />
                                    <button type="submit" class="btn btn-primary rounded-0" name="ActionToConfirm" value="RebuildSearchCache">Start</button>
                                </form>
                            </td>
                        </tr>
                        <tr>
                            <td>Rebuild all pages</td>
                            <td>
                                <form action='/Admin/ConfirmAction?PostBack=/Admin/Utilities' method="post">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="message" value="This will rebuild all pages in the wiki. This could take some time! Continue?" />
                                    <button type="submit" class="btn btn-primary rounded-0" name="ActionToConfirm" value="RebuildAllPages">Start</button>
                                </form>
                            </td>
                        </tr>
                        <tr>
                            <td>Truncate page revision history</td>
                            <td>
                                <form action='/Admin/ConfirmAction?PostBack=/Admin/Utilities' method="post">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="message" value="Truncating page revisions will delete all revision history dor all pages and files. This will leave only the most current revision of all objects. This is genrally considered a big deal! Continue?" />
                                    <button type="submit" class="btn btn-primary rounded-0" name="ActionToConfirm" value="TruncatePageRevisionHistory">Start</button>
                                </form>
                            </td>
                        </tr>
                    </table>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
