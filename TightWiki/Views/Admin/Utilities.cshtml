@model TightWiki.Models.ViewModels.Admin.UtilitiesViewModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var wikiContext = ViewData["WikiContext"] as TightWiki.WikiContextState;
}

<div class="card">
    <div class="card-header"><h3>Utilities</h3></div>
    <div class="card-body">
        <font size="4" face="ARIAL,HELVETICA">
            Various wiki administration utilities.<br /><br />
        </font>

        <table class="fixedTable100" border="0" cellpadding="0">
            <tbody>
                <tr>
                    <td height="52" valign="middle" align="left">
                        @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
                        {
                            @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
                        }
                        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                        {
                            <div class="alert alert-danger">@Html.Raw(Model.ErrorMessage)</div>
                        }
                        @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                        {
                            <div class="alert alert-success">@Html.Raw(Model.SuccessMessage)</div>
                        }

                        <table class="table fixedTable100 table-striped" border="0" width="100%" cellspacing="0" cellpadding="0">
                            <tr>
                                <td>Rebuild all pages</td>
                                <td>
                                    @Html.Raw(TightWiki.Library.ConfirmActionHelper.GenerateDangerButton("This will rebuild all pages in the wiki. This could take some time! Continue?",
                                             "Execute", "/Admin/Utilities", "RebuildAllPages", "/Admin/Utilities", "/Admin/Utilities"))
                                </td>
                            </tr>
                            @if (TightWiki.GlobalSettings.IsDebug == true)
                            {
                                <tr>
                                    <td>Create Self-Documentation</td>
                                    <td>
                                        @Html.Raw(TightWiki.Library.ConfirmActionHelper.GenerateWarnButton("This will build a wiki page for each built-in wiki function. Existing pages will not be overwritten. Continue?",
                                                 "Execute", "/Admin/Utilities", "CreateSelfDocumentation", "/Admin/Utilities", "/Admin/Utilities"))
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td>Truncate page revisions</td>
                                <td>
                                    @Html.Raw(TightWiki.Library.ConfirmActionHelper.GenerateWarnButton("Truncating page revisions will delete all revision history for all pages and files. This will leave only the most current revision of all objects. This is generally considered a big deal! Continue?",
                                             "Execute", "/Admin/Utilities", "TruncatePageRevisions", "/Admin/Utilities", "/Admin/Utilities"))
                                </td>
                            </tr>
                            <tr>
                                <td>Flush memory cache</td>
                                <td>
                                    @Html.Raw(TightWiki.Library.ConfirmActionHelper.GenerateSafeButton("Flushing the memory cache will cause any cached items to be dropped and require database hits as pages are requested. Continue?",
                                             "Execute", "/Admin/Utilities", "FlushMemoryCache", "/Admin/Utilities", "/Admin/Utilities"))
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
