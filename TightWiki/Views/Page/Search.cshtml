@model TightWiki.Library.ViewModels.Page.PageSearchViewModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var context = ViewData["Context"] as TightWiki.Library.Library.StateContext;
}

<div class="card">
    <div class="card-header"><h3>Page Search</h3></div>
    <div class="card-body">
        <font size="4" face="ARIAL,HELVETICA">
            If it's here, you should be able to find it.<br /><br />
        </font>

        @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
        {
            @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
        }

        <table class="fixedTable100" style="min-width: 400px;" border="0" cellpadding="0">
            <tbody>
                <tr>
                    <td height="52" valign="middle" align="left">

                        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                        {
                            <div class="alert alert-danger">@Html.Raw(Model.ErrorMessage)</div>
                        }
                        @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                        {
                            <div class="alert alert-success">@Html.Raw(Model.SuccessMessage)</div>
                        }

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <table class="fixedTable100" border="0" cellspacing="0" cellpadding="5">
                                <tr>
                                    <td width="80%">
                                        @Html.TextBoxFor(x => x.SearchTokens, new { style = "width:100%" })
                                    </td>
                                    <td colspan="2"><button type="submit" class="btn btn-primary rounded-0 btn-sm">Go</button></td>
                                </tr>
                            </table>
                            <br />

                            <table class="table fixedTable100 table-striped" border="0" cellspacing="0" cellpadding="0">
                                @foreach (var p in Model.Pages)
                                {
                                    <tr>
                                        <td>
                                            @if ((p.Namespace ?? "") != "")
                                            {
                                                <font class="text-muted">@p.Namespace ::</font>
                                            }<a href="/@p.Navigation">@p.Title</a>@(String.IsNullOrEmpty(@p.Description) ? "" : " : ")  @p.Description
                                        </td>
                                    </tr>
                                }
                            </table>

                            if (@context?.PaginationCount > 1)
                            {
                                if (@context?.PreviousPage != null)
                                {
                                    <a href="/Page/Search/1?Tokens=@Model.SearchTokens">&lt;&lt; First</a>
                                    @:&nbsp; | &nbsp;
                                    <a href="/Page/Search/@context?.PreviousPage?Tokens=@Model.SearchTokens">&lt; Previous</a>
                                }
                                else
                                {
                                    @:&lt;&lt; First &nbsp; | &nbsp; &lt; Previous
                                }
                                @:&nbsp; | &nbsp;

                                if (@context?.NextPage != null)
                                {
                                    <a href="/Page/Search/@context?.NextPage?Tokens=@Model.SearchTokens">Next &gt;</a>
                                    @:&nbsp; | &nbsp;
                                    <a href="/Page/Search/@context?.PaginationCount?Tokens=@Model.SearchTokens">Last &gt;&gt;</a>
                                }
                                else
                                {
                                    @:Next &gt; &nbsp; | &nbsp; Last &gt;&gt;
                                }
                            }
                        }
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<script>
    window.onload = function () {
        document.getElementById("SearchTokens").focus();
    }
</script>