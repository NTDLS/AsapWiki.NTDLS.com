@model TightWiki.Models.ViewModels.Admin.PageCompilationStatisticsViewModel
@using TightWiki.Library
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var wikiContext = ViewData["WikiContext"] as TightWiki.WikiContextState ?? throw new Exception("Wiki State Context cannot be null.");
}

<h3>
    Compilations
</h3>

<font size="3" face="ARIAL,HELVETICA">
    The compilation statistics for all wiki page operations.<br /><br />
</font>

<table class="fixedTable100" border="0" cellpadding="0">
    <tbody>
        <tr>
            <td height="52" valign="middle" align="left">
                @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <div class="alert alert-danger">@Html.Raw(Model.ErrorMessage)</div>
                }
                @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                {
                    <div class="alert alert-success">@Html.Raw(Model.SuccessMessage)</div>
                }

                @Html.Raw(TightWiki.Library.ConfirmActionHelper.GenerateWarnLink("Purging the page compilation statistics will delete all of the stored compilation statistics for all pages. Continue?",
                         "Purge Compilation Statistics", "/Admin/PurgeCompilationStatistics", Context.Request.Path.Value))
                <br />

                <table class="table fixedTable100 table-striped" border="0" cellspacing="0" cellpadding="0">
                    <tr>
                        <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "Namespace")">Name</a></strong></td>
                        <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "CreatedDate")">Date/Time</a></strong></td>
                        <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "Compilations")">Compilations</a></strong></td>
                        <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "AvgBuildTimeMs")">Duration</a></strong></td>
                        <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "AvgWikiMatches")">Matches</a></strong></td>
                        <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "TotalErrorCount")">Errors</a></strong></td>
                        <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "AvgOutgoingLinkCount")">Links</a></strong></td>
                        <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "AvgTagCount")">Tags</a></strong></td>
                        <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "AvgRawBodySize")">Raw Size</a></strong></td>
                        <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "AvgWikifiedBodySize")">Wikified Size</a></strong></td>
                    </tr>

                    @foreach (var stat in Model.Statistics)
                    {

                        <tr>
                            <td>
                                @if (string.IsNullOrEmpty(@stat.Namespace) == false)
                                {
                                    <text><a href="/Admin/Namespace/@stat.Namespace">@stat.Namespace</a> :: </text>
                                } <a href="/@stat.Navigation">@stat.Title</a>
                            </td>
                            <td>@stat.LatestBuild</td>
                            <td>@stat.Compilations.ToString("N0")</td>
                            <td>@stat.AvgBuildTimeMs.ToString("N0")ms</td>
                            <td>@stat.AvgWikiMatches.ToString("N0")</td>
                            <td>@stat.TotalErrorCount.ToString("N0")</td>
                            <td>@stat.AvgOutgoingLinkCount.ToString("N0")</td>
                            <td>@stat.AvgTagCount.ToString("N0")</td>
                            <td>@NTDLS.Helpers.Formatters.FileSize((long)stat.AvgRawBodySize)</td>
                            <td>@NTDLS.Helpers.Formatters.FileSize((long)stat.AvgWikifiedBodySize)</td>
                        </tr>
                    }
                </table>

                @Html.Raw(TightWiki.Library.PageSelectorGenerator.Generate(Context.Request.QueryString, Model.PaginationPageCount))
            </td>
        </tr>
    </tbody>
</table>
