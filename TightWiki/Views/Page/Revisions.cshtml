@model TightWiki.Models.ViewModels.Page.PageRevisionsViewModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var wikiContext = ViewData["WikiContext"] as TightWiki.WikiContextState;
}

<div class="card">
    <div class="card-header"><h3>Page Revisions</h3></div>
    <div class="card-body">
        <font size="4" face="ARIAL,HELVETICA">
            All changes that have been made to the page. <br /><br />
        </font>

        @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
        {
            @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
        }

        @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
        {
            @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
        }

        <table class="table fixedTable100 table-bordered" border="0" cellspacing="0" cellpadding="0">
            <tbody>
                <tr>
                    <td height="52" valign="middle" align="left">

                        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                        {
                            <div class="alert alert-danger">@Html.Raw(Model.ErrorMessage)</div>
                        }
                        @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                        {
                            <div class="alert alert-success">@Html.Raw(Model.SuccessMessage)</div>
                        }

                        @using (Html.BeginForm("Revisions", "Page", FormMethod.Get))
                        {
                            <table class="table fixedTable100 table-striped" border="0" cellspacing="0" cellpadding="0">
                                <thead>
                                    <tr>
                                        <td><strong>Revision</strong></td>
                                        <td><strong>Modified By</strong></td>
                                        <td><strong>Modified Date</strong></td>
                                        <td><strong>Summary</strong></td>
                                    </tr>
                                </thead>

                                <tbody>
                                    @foreach (var h in Model.Revisions)
                                    {
                                        <tr>
                                            <td><a href="/@wikiContext?.PageNavigation/@h.Revision" target="_blank" rel="noopener">@Html.DisplayTextFor(x => h.Revision)</a></td>
                                            <td><a href="/Profile/Public/@h.ModifiedByUserName">@Html.DisplayTextFor(x => h.ModifiedByUserName)</a></td>
                                            <td>@Html.DisplayTextFor(x => h.ModifiedDate)</td>
                                            <td>@Html.DisplayTextFor(x => h.ChangeSummary)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>

                            @Html.Raw(TightWiki.Library.PageSelectorGenerator.Generate($"{@wikiContext?.PageNavigation}/Revisions", Context.Request.QueryString, @wikiContext?.PaginationPageCount))
                        }
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
