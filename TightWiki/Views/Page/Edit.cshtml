@model TightWiki.ViewModels.Page.PageEditViewModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var wikiContext = ViewData["WikiContext"] as TightWiki.WikiContextState;
}

<link rel="stylesheet" href="/codemirror/codemirror.css">
<link rel="stylesheet" href="/codemirror/addon/scroll/simplescrollbars.css">
<script src="/codemirror/codemirror.js"></script>
<script src="/codemirror/addon/edit/matchbrackets.js"></script>
<script src="/codemirror/mode/tightwiki/tightwiki.js"></script>
<script src="/codemirror/addon/scroll/simplescrollbars.js"></script>

<style type="text/css">
    .CodeMirror {
        border: 1px solid #eee;
        height: 50em;
    }

    #dropSection {
        height: 150px;
        width: 100%;
        background-color: #f6f8fa;
        overflow: hidden;
        text-align: center;
    }

    #btnUpload {
        display: none;
    }

    .active {
        background-color: lightgreen !important;
    }
</style>

<script>
    function insertTextAtCursor(editor, text) {
        var doc = editor.getDoc();
        var cursor = doc.getCursor();
        doc.replaceRange(text, cursor);
    }
</script>

<script src="~/js/filedropAttachment.js"></script>
<script type="text/javascript">

    function readyFn(jQuery) {
        $("#uploadedFiles").load("/File/EditPageAttachment/@wikiContext?.PageNavigation");
    }

    $(document).ready(readyFn);

    $(function () {
        $("#dropSection").filedrop({
            fallback_id: 'btnUpload',
            fallback_dropzoneClick: true,
            url: '@Url.Action("UploadDragDrop", "File")/@wikiContext?.PageNavigation',
            paramname: 'postedFiles',
            maxfiles: 5, //Maximum Number of Files allowed at a time.
            maxfilesize: 25, //Maximum File Size in MB.
            dragOver: function () {
                $('#dropSection').addClass('active');
            },
            dragLeave: function () {
                $('#dropSection').removeClass('active');
            },
            drop: function () {
                $('#dropSection').removeClass('active');
            },
            uploadFinished: function (i, file, response, time) {
                //To do some task after one upload is done.
                var editor = document.querySelector('.CodeMirror').CodeMirror;

                var ext = file.name.split('.').pop().toLowerCase();

                if (ext.includes("png") || ext.includes("jpg") || ext.includes('jpeg') || ext.includes('gif') || ext.includes('bmp')) {
                    insertTextAtCursor(editor, '##Image(' + file.name + ')');
                }
                else {
                    insertTextAtCursor(editor, '##File(' + file.name + ')');
                }
            },
            afterAll: function (e) {
                //To do some task after all uploads done.
                $("#uploadedFiles").load("/File/EditPageAttachment/@wikiContext?.PageNavigation");
            }
        })
    })

    $(document).ready(function () {
        var frm = $('#manualUpload');
        frm.submit(function (e) {
            e.preventDefault();
            var formData = new FormData(e[0]);
            formData.append('fileData', $('input[type=file]')[0].files[0]);

            $.ajax({
                url: '@Url.Action("ManualUpload", "File")/@wikiContext?.PageNavigation',
                type: 'POST',
                data: formData,
                async: false,
                cache: false,
                contentType: false,
                enctype: 'multipart/form-data',
                processData: false,
                success: function (response) {
                    $("#uploadedFiles").load("/File/EditPageAttachment/@wikiContext?.PageNavigation");
                }
            });
            return false;
        });
    });
</script>

<div class="bodyDiv">
    <div class="card">
        <div class="card-header"><h3>Content</h3></div>
        <div class="card-body">
            @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
            {
                @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
            }

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger">@Html.Raw(Model.ErrorMessage)</div>
            }
            @if (!string.IsNullOrEmpty(Model.SuccessMessage))
            {
                <div class="alert alert-success">@Html.Raw(Model.SuccessMessage)</div>
            }

            @using (Html.BeginForm())
            {
                @Html.HiddenFor(x => x.Id)

                <div class="form-group"><button type="submit" class="btn btn-primary rounded-0">Save</button></div>
                <div class="form-group">
                    <a href="/@wikiContext?.PageNavigation" target="_blank" rel="noopener">View in new Tab</a>
                </div>
                <strong>@Html.LabelFor(x => x.Name)</strong>

                <br />
                @Html.TextBoxFor(x => x.Name, new { style = "width:50%" })

                <br />
                <br />

                <strong>@Html.LabelFor(x => x.Description)</strong>

                <br />
                @Html.TextBoxFor(x => x.Description, new { style = "width:90%" })

                <br />
                <br />

                <strong>@Html.LabelFor(x => x.Body)</strong>

                <br />
                <textarea id=Body name="Body">@Model.Body</textarea>
                <script>
                    var editor = CodeMirror.fromTextArea(document.getElementById("Body"), {
                        lineNumbers: true,
                        mode: "text/x-tightwiki",
                        matchBrackets: true,
                        viewportMargin: Infinity,
                        lineWrapping: true,
                        scrollbarStyle: "simple"
                    });
                </script>

                <br />

                <div class="form-group"><button type="submit" class="btn btn-primary rounded-0">Save</button></div>
            }
        </div>
    </div>
    <br />

    <div class="card">
        <div class="card-header"><h3>Attachments</h3></div>
        <div class="card-body">
            @if (Model?.Id > 0 && @wikiContext?.CanCreate == true)
            {

                <div id="dropSection" class="dropSection">
                    <br />Attach files by dropping them here or by manually selecting them below:<br /><br />
                    <div id="manualUpload">
                        <form id="manualUpload" action="/manualUpload" enctype="multipart/form-data" method="post"><input type="file" name="fileData"><input type="submit" value="Upload"></form>
                    </div>

                </div>
                <div id="uploadedFiles">
                </div>
                <input type="button" id="btnUpload" value="Upload" />
            }
            else
            {
                <div>Save the page before uploading files.</div>
            }
        </div>
    </div>
</div>
