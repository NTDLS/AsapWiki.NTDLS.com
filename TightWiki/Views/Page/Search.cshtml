@model TightWiki.Models.ViewModels.Page.PageSearchViewModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var wikiContext = ViewData["WikiContext"] as TightWiki.WikiContextState ?? throw new Exception("Wiki State Context cannot be null.");
}

<h3>
    Page Search
</h3>

<p class="text-dark">
    If it's here, you should be able to find it.<br /><br />
</p>

<table class="fixedTable100" style="min-width: 400px;" border="0" cellpadding="0">
    <tbody>
        <tr>
            <td height="52" valign="middle" align="left">
                @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <div class="alert alert-danger">@Html.Raw(Model.ErrorMessage)</div>
                }
                @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                {
                    <div class="alert alert-success">@Html.Raw(Model.SuccessMessage)</div>
                }

                @using (Html.BeginForm(FormMethod.Get))
                {
                    <table class="fixedTable100" border="0" cellspacing="0" cellpadding="5">
                        <tr>
                            <td width="80%">
                                @Html.TextBoxFor(x => x.SearchString, new { style = "width:100%" })
                            </td>
                            <td colspan="2"><button type="submit" class="btn btn-primary rounded-0 btn-sm">Search</button></td>
                        </tr>
                    </table>
                    <br />

                    <table class="table fixedTable100 table-striped" border="0" cellspacing="0" cellpadding="0">
                        @foreach (var p in Model.Pages)
                        {
                            <tr>
                                <td>
                                    @if ((p.Namespace ?? "") != "")
                                    {
                                        <font class="text-muted">@p.Namespace ::</font>
                                    }<a href="/@p.Navigation">@p.Title</a>@(String.IsNullOrEmpty(@p.Description) ? "" : " : ")  @p.Description
                                </td>
                            </tr>
                        }
                    </table>

                    @Html.Raw(TightWiki.Library.PageSelectorGenerator.Generate(Context.Request.QueryString, Model.PaginationPageCount))
                }
            </td>
        </tr>
    </tbody>
</table>

<script>
    window.onload = function () {
        document.getElementById("SearchTokens").focus();
    }
</script>