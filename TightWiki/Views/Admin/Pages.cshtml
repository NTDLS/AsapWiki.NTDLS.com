@model TightWiki.Models.ViewModels.Admin.PagesViewModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var wikiContext = ViewData["WikiContext"] as TightWiki.WikiContextState;
}

<div class="card">
    <div class="card-header"><h3>Pages</h3></div>
    <div class="card-body">
        <font size="4" face="ARIAL,HELVETICA">
            All pages contained in the wiki.<br /><br />
        </font>

        <table class="fixedTable100" border="0" cellpadding="0">
            <tbody>
                <tr>
                    <td height="52" valign="middle" align="left">
                        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                        {
                            <div class="alert alert-danger">@Html.Raw(Model.ErrorMessage)</div>
                        }
                        @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                        {
                            <div class="alert alert-success">@Html.Raw(Model.SuccessMessage)</div>
                        }

                        @using (Html.BeginForm(FormMethod.Get))
                        {
                            <table class="fixedTable100" border="0" cellspacing="0" cellpadding="5">
                                <tr>
                                    <td width="80%">
                                        @Html.TextBoxFor(x => x.SearchString, new { style = "width:100%" })
                                    </td>
                                    <td colspan="2"><button type="submit" class="btn btn-primary rounded-0 btn-sm">Go</button></td>
                                </tr>
                            </table>

                            <table class="table fixedTable100 table-striped" border="0" cellspacing="0" cellpadding="0">
                                <thead>
                                    <tr>
                                        <td><strong>Name</strong></td>
                                        <td><strong>Revision</strong></td>
                                        <td><strong>Modified By</strong></td>
                                        <td><strong>Modified Date</strong></td>
                                    </tr>
                                </thead>

                                @foreach (var p in Model.Pages)
                                {
                                    <tr>
                                        <td><a href="/@p.Navigation">@p.Name</a></td>
                                        <td><a href="/@p.Navigation/Revisions">@p.Revision</a></td>
                                        <td>@p.ModifiedByUserName</td>
                                        <td>@p.ModifiedDate</td>
                                    </tr>
                                }
                            </table>

                            @Html.Raw(TightWiki.Library.PageSelectorGenerator.Generate(Context.Request.QueryString, Model.PaginationPageCount))
                        }
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
