@model TightWiki.Shared.Models.View.EditPageModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="/lib/codemirror.css">
<link rel="stylesheet" href="/addon/scroll/simplescrollbars.css">
<script src="/lib/codemirror.js"></script>
<script src="/addon/edit/matchbrackets.js"></script>
<script src="/mode/tightwiki/tightwiki.js"></script>
<script src="/addon/scroll/simplescrollbars.js"></script>

<style type="text/css">
    .CodeMirror {
        border: 1px solid #eee;
        height: 50em;
    }

    #dropSection {
        height: 100px;
        width: 100%;
        background-color: #f6f8fa;
        overflow: hidden;
        text-align: center;
    }

    #btnUpload {
        display: none;
    }

    .active {
        background-color: yellow !important;
    }
</style>

<script>
function insertTextAtCursor(editor, text) {
    var doc = editor.getDoc();
    var cursor = doc.getCursor();
    doc.replaceRange(text, cursor);
}
</script>

<script src="~/js/filedrop.js"></script>
<script type="text/javascript">

    function readyFn(jQuery) {
        $("#uploadedFiles").load("/File/EditPageAttachment/" + window.location.pathname.substring(window.location.pathname.lastIndexOf('/') + 1));
    }

    $(document).ready(readyFn);

    $(function () {
        $("#dropSection").filedrop({
            fallback_id: 'btnUpload',
            fallback_dropzoneClick: true,
            url: '@Url.Action("Upload", "File")/' + window.location.pathname.substring(window.location.pathname.lastIndexOf('/') + 1),
            allowedfileextensions: ['.doc', '.docx', '.pdf', '.jpg', '.jpeg', '.png', '.gif', '.txt', '.json'],
            paramname: 'postedFiles',
            maxfiles: 5, //Maximum Number of Files allowed at a time.
            maxfilesize: 25, //Maximum File Size in MB.
            dragOver: function () {
                $('#dropSection').addClass('active');
            },
            dragLeave: function () {
                $('#dropSection').removeClass('active');
            },
            drop: function () {
                $('#dropSection').removeClass('active');
            },
            uploadFinished: function (i, file, response, time) {
                //To do some task after one upload is done.
                var editor = document.querySelector('.CodeMirror').CodeMirror;

                var ext = file.name.split('.').pop().toLowerCase();

                if(ext.includes("png") || ext.includes("jpg") || ext.includes('jpeg') || ext.includes('gif') || ext.includes('bmp'))
                {
                    insertTextAtCursor(editor, '##Image(' + file.name + ')');
                }
                else{
                    insertTextAtCursor(editor, '##File(' + file.name + ')');
                }
            },
            afterAll: function (e) {
                //To do some task after all uploads done.
                $("#uploadedFiles").load("/File/EditPageAttachment/" + window.location.pathname.substring(window.location.pathname.lastIndexOf('/') + 1));
            }
        })
    })


</script>

<div class="bodyDiv">
    <div class="card">
        <div class="card-header"><h3>Content</h3></div>
        <div class="card-body">
            @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
            {
                @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
            }

            @if (Model.ErrorMessage != null)
            {
                <div class="alert alert-danger">@Model.ErrorMessage</div>
            }
            @if (Model.SuccessMessage != null)
            {
                <div class="alert alert-success">@Model.SuccessMessage</div>
            }

            @using (Html.BeginForm())
            {
                @Html.HiddenFor(x => x.Id)

                <div class="form-group"><button type="submit" class="btn btn-primary rounded-0">Save</button></div>
                <div class="form-group">
                    <a href="/@ViewBag.Config.PageNavigation" target="_blank" rel="noopener">View in new Tab</a>
                </div>
                <strong>@Html.LabelFor(x => x.Name)</strong>

                <br />
                @Html.TextBoxFor(x => x.Name, new { style = "width:50%" })

                <br />
                <br />

                <strong>@Html.LabelFor(x => x.Description)</strong>

                <br />
                @Html.TextBoxFor(x => x.Description, new { style = "width:90%" })

                <br />
                <br />

                <strong>@Html.LabelFor(x => x.Body)</strong>

                <br />
                <textarea id=Body name="Body">@Model.Body</textarea>
                <script>
                    var editor = CodeMirror.fromTextArea(document.getElementById("Body"), {
                        lineNumbers: true,
                        mode: "text/x-tightwiki",
                        matchBrackets: true,
                        viewportMargin: Infinity,
                        lineWrapping: true,
                        scrollbarStyle: "simple"
                    });
                </script>
            }
        </div>
    </div>
    <br />

    <div class="card">
        <div class="card-header"><h3>Attachments</h3></div>
        <div class="card-body">
            <div id="dropSection" class="dropSection">
                <br /><strong>Attach files by dropping them here...</strong>
            </div>
            <div id="uploadedFiles">
            </div>
            <input type="button" id="btnUpload" value="Upload" />
        </div>
    </div>
</div>
