@model TightWiki.Shared.Models.View.EditPageModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
}

<link rel=stylesheet href="/doc/docs.css">
<link rel="stylesheet" href="/lib/codemirror.css">
<link rel="stylesheet" href="/addon/scroll/simplescrollbars.css">
<script src="/lib/codemirror.js"></script>
<script src="/addon/edit/matchbrackets.js"></script>
<script src="/mode/tightwiki/tightwiki.js"></script>
<script src="/addon/scroll/simplescrollbars.js"></script>

<style type="text/css">
         .iframe {
             box-shadow: none !important;
         }
         .bodyDiv {
            position: realitive;
            left: 1%;
            right: 1%;
        }
    .CodeMirror {
      border: 1px solid #eee;
      height: 50em;
    }
</style>

<script>
    window.onmessage = function(e) {
        var argument = (e.data + '');

        if (argument.startsWith('image:')) {
            argument = argument.substring(6, argument.length);
            insertAtCursor(document.getElementById('Body'), argument)
        }
        else if (argument.startsWith('file:')) {
            argument = argument.substring(5, argument.length);
            insertAtCursor(document.getElementById('Body'), argument)
        }
    };

    function insertAtCursor(myField, myValue) {
        //IE support
        if (document.selection) {
            myField.focus();
            sel = document.selection.createRange();
            sel.text = myValue;
        }
        //MOZILLA and others
        else if (myField.selectionStart || myField.selectionStart == '0') {
            var startPos = myField.selectionStart;
            var endPos = myField.selectionEnd;
            myField.value = myField.value.substring(0, startPos)
                + myValue
                + myField.value.substring(endPos, myField.value.length);
        } else {
            myField.value += myValue;
        }
    }

</script>

<div class=bodyDiv">
    <div class="card">
        <div class="card-header"><h3>Content</h3></div>
        <div class="card-body">
            @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
            {
            @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
            }

            <table border="0" width="100%" cellpadding="5">
                <tbody>
                    <tr>
                        <td height="52" valign="middle" align="center">

                            @if (Model.ErrorMessage != null)
                            {
                            <div class="alert alert-danger">@Model.ErrorMessage</div>
                            }
                            @if (Model.SuccessMessage != null)
                            {
                            <div class="alert alert-success">@Model.SuccessMessage</div>
                            }

                            @using (Html.BeginForm())
                            {
                            @Html.HiddenFor(x => x.Id)

                            <table border="0" width="100%" cellpadding="5">

                                <tr class="padded">
                                    <td colspan="2">
                                        <div class="form-group"><button type="submit" class="btn btn-primary rounded-0">Save</button></div>

                                        <div class="form-group">
                                            <a href="/@ViewBag.Config.PageNavigation" target="_blank" rel="noopener">View in new Tab</a>
                                        </div>
                                    </td>
                                </tr>
                                <tr class="padded">
                                    <td width="10">
                                        @Html.LabelFor(x => x.Name)
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(x => x.Name, new { style = "width:100%" })
                                    </td>
                                </tr>
                                <tr class="padded">
                                    <td>
                                        @Html.LabelFor(x => x.Description)
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(x => x.Description, new { style = "width:100%" })
                                    </td>
                                </tr>
                                <tr class="padded">
                                    <td colspan="2">
                                        @Html.LabelFor(x => x.Body)
                                    </td>
                                </tr>
                            </table>
                            }
                        </td>
                    </tr>
                </tbody>
            </table>

            <textarea id=Body name="Body">@Model.Body</textarea>
            <script>
                var editor = CodeMirror.fromTextArea(document.getElementById("Body"), {
                    lineNumbers: true,
                    mode: "text/x-tightwiki",
                    matchBrackets: true,
                    viewportMargin: Infinity,
                    scrollbarStyle: "simple"
                });
            </script>
        </div>
    </div>
    <br />

    <div class="card">
        <div class="card-header"><h3>Attachments</h3></div>
        <div class="card-body">
        @if (Model?.Id > 0 && @ViewBag.Config.Context?.CanCreate == true)
        {
                <div><iframe src="/File/EditPageAttachment/@ViewBag.Config.PageNavigation" align="left" width="600" frameBorder="0" /></div>
        }
        else
        {
                <div>Save the page before uploading files.</div>
        }
        </div>
    </div>
</div>

