@model TightWiki.Models.ViewModels.Admin.AccountsViewModel
@using TightWiki.Library
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var wikiContext = ViewData["WikiContext"] as TightWiki.WikiContextState ?? throw new Exception("Wiki State Context cannot be null.");
}

<h3>
    Accounts
</h3>

<font size="3" face="ARIAL,HELVETICA">
    Global configuration for user accounts.<br /><br />
</font>

<table class="fixedTable100" border="0" cellpadding="0">
    <tbody>
        <tr>
            <td height="52" valign="middle" align="left">
                @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <div class="alert alert-danger">@Html.Raw(Model.ErrorMessage)</div>
                }
                @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                {
                    <div class="alert alert-success">@Html.Raw(Model.SuccessMessage)</div>
                }

                <form action="/Admin/AddAccount"><button type="submit" class="btn btn-primary">Add new account</button></form> <br />

                @using (Html.BeginForm(FormMethod.Get))
                {
                    <table class="fixedTable100" border="0" cellspacing="0" cellpadding="5">
                        <tr>
                            <td width="80%">
                                @Html.TextBoxFor(x => x.SearchString, new { style = "width:100%" })
                            </td>
                            <td colspan="2"><button type="submit" class="btn btn-primary rounded-0 btn-sm">Search</button></td>
                        </tr>
                    </table>

                    <table class="table fixedTable100 table-striped" border="0" cellspacing="0" cellpadding="0">

                        <thead>
                            <tr>
                                <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "Account")">Account</a></strong></td>
                                <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "FirstName")">First Name</a></strong></td>
                                <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "LastName")">Last Name</a></strong></td>
                                <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "Country")">Country</a></strong></td>
                                <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "TimeZone")">TimeZone</a></strong></td>
                                <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "EmailAddress")">EmailAddress</a></strong></td>
                                <td><strong><a href="?@QueryStringConverter.OrderHelper(wikiContext, "Created")">CreatedDate</a></strong></td>
                            </tr>
                        </thead>

                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <td><a href="/Admin/Account/@user.Navigation">@user.AccountName</a></td>
                                <td>@user.FirstName</td>
                                <td>@user.LastName</td>
                                <td>@user.Country</td>
                                <td>@user.TimeZone</td>
                                <td>@user.EmailAddress  @Html.Raw(((user.EmailConfirmed == true) ? "&check;" : ""))   </td>
                                <td>@user.CreatedDate</td>
                            </tr>
                        }
                    </table>

                    @Html.Raw(TightWiki.Library.PageSelectorGenerator.Generate(Context.Request.QueryString, Model.PaginationPageCount))
                }

                <br />
                <form action="/Admin/AddAccount"><button type="submit" class="btn btn-primary">Add new account</button></form>
            </td>
        </tr>
    </tbody>
</table>
