@model TightWiki.Models.ViewModels.Page.PageDisplayViewModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var wikiContext = ViewData["WikiContext"] as TightWiki.WikiContextState ?? throw new Exception("Wiki State Context cannot be null.");
}

@if (Model.Revision < Model.MostCurrentRevision)
{
    <div class="card bg-info mb-3">
        <div class="card-header"><strong>Viewing a historical version</strong></div>
        <div class="card-body">
            <p class="card-text">
                You are viewing revision @Model.Revision of "@Model.Name" modified by @Model.ModifiedByUserName on @Model.ModifiedDate.<br />

                <a class="btn btn-success btn-thin" href="/@Model.Navigation">View latest revision</a>
                @if(wikiContext.CanModerate)
                {
                    <a class="btn btn-warning btn-thin" href="/@Model.Navigation/revert/@Model.Revision">Revert to revision @Model.Revision</a>
                }
            </p>
        </div>
    </div>
}

@Html.Raw(Model.Body)

@if (TightWiki.Configuration.GlobalConfiguration.ShowLastModifiedOnPageFooter && string.IsNullOrWhiteSpace(@Model.ModifiedByUserName) == false && Model.HideFooterLastModified != true)
{
    <br />

    <small><cite title="Modified By">Last modified by <a href="/Profile/Public/@Model.ModifiedByUserName">@Model.ModifiedByUserName</a> @@ @Model.ModifiedDate</cite></small>
    <br />
}

@if (Model.HideFooterComments == false)
{
    @if (TightWiki.Configuration.GlobalConfiguration.EnablePageComments && TightWiki.Configuration.GlobalConfiguration.ShowCommentsOnPageFooter)
    {
        <hr class="mt-5 mb-5">
        <h2>Comments</h2>
    }
    @if (TightWiki.Configuration.GlobalConfiguration.EnablePageComments && TightWiki.Configuration.GlobalConfiguration.ShowCommentsOnPageFooter)
    {
        if (@wikiContext.IsAuthenticated == true)
        {
            <form method="post" action="/@wikiContext.PageNavigation/Comments">
                <div class="form-outline mb-4">
                    <button type="submit" value="Find" style="float: right" class="btn btn-primary rounded-0">Post</button>
                    <div style="overflow: hidden; padding-right: .5em;">
                        <input type="text" name="Comment" id="Comment" class="form-control" placeholder="Type comment..." />
                    </div>
                </div>
            </form>
        }
        else
        {
            @:<a href="/Account/Login">Login to leave a comment</a>.
        }
    }
    @if (TightWiki.Configuration.GlobalConfiguration.EnablePageComments && TightWiki.Configuration.GlobalConfiguration.ShowCommentsOnPageFooter && Model.Comments != null && Model.Comments.Count > 0)
    {
        @foreach (var h in Model.Comments)
        {
            <div class="card mb-4">
                <div class="card-body">
                    <p>@Html.Raw(h.Body)</p>
                    <div class="d-flex justify-content-between">
                        <div class="d-flex flex-row align-items-center">
                            <img src="/Profile/@h.UserNavigation/Avatar?Exact=16" />
                            <p class="small mb-0 ms-2"><cite><a href="/Account/@h.UserNavigation/Profile">@Html.DisplayTextFor(x => h.UserName)</a> @@ @Html.DisplayTextFor(x => h.CreatedDate)</cite></p>
                        </div>
                        @if (wikiContext.CanModerate == true || h.UserId == wikiContext.Profile?.UserId)
                        {
                            <div class="d-flex flex-row align-items-center">
                                <p class="small text-muted mb-0"><a href="/@wikiContext.PageNavigation/Comments?Delete=@h.Id" onclick="return confirm('Are you sure you want to delete this comment?')">Delete</a></p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    }
    @if (TightWiki.Configuration.GlobalConfiguration.EnablePageComments && TightWiki.Configuration.GlobalConfiguration.ShowCommentsOnPageFooter)
    {
        <a href="/@wikiContext.PageNavigation/Comments">View all comments</a>
    }
}