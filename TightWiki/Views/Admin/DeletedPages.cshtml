@model TightWiki.Models.ViewModels.Admin.DeletedPagesViewModel
@using TightWiki.Library
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var sessionState = ViewData["SessionState"] as TightWiki.SessionState ?? throw new Exception("Wiki State Context cannot be null.");
}

<h3>
    Deleted Pages
</h3>

<p>
    Pages that have been deleted. Can be purged or restored.<br /><br />
</p>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger">@Html.Raw(Model.ErrorMessage)</div>
}
@if (!string.IsNullOrEmpty(Model.SuccessMessage))
{
    <div class="alert alert-success">@Html.Raw(Model.SuccessMessage)</div>
}

@Html.Raw(TightWiki.Library.ConfirmActionHelper.GenerateDangerLink("This will permanently purge all deleted pages. Continue?",
                  "Purge Deleted Pages", "/Admin/PurgeDeletedPages", Context.Request.Path.Value))
<br />
<br />

@using (Html.BeginForm(FormMethod.Get))
{
    <table class="fixedTable100" border="0" cellspacing="0" cellpadding="5">
        <tr>
            <td width="80%">
                @Html.TextBoxFor(x => x.SearchString, new { style = "width:100%" })
            </td>
            <td colspan="2"><button type="submit" class="btn btn-outline-primary rounded-0 btn-sm">Search</button></td>
        </tr>
    </table>
    <br />

    @if (Model.Pages.Count > 0)
    {
        <table class="table fixedTable100 table-striped" border="0" cellspacing="0" cellpadding="0">
            <thead>
                <tr>
                    <td><strong><a href="?@QueryStringConverter.OrderHelper(sessionState, "Page")">Page</a></strong></td>
                    <td><strong>Action</strong></td>
                </tr>
            </thead>
            @foreach (var p in Model.Pages)
            {
                <tr>
                    <td>
                        @if (string.IsNullOrEmpty(@p.Namespace) == false)
                        {
                            <text><a href="/Admin/Namespace/@p.Namespace">@p.Namespace</a> :: </text>
                        } <a href="/Admin/DeletedPage/@p.Id">@p.Title</a>
                    </td>
                    <td>
                        @Html.Raw(TightWiki.Library.ConfirmActionHelper.GenerateSafeLink("This will restore the deleted page and all of its history. Continue?",
                                 "Restore", "/Admin/RestoreDeletedPage/" + @p.Id, Context.Request.Path.Value))
                        @Html.Raw(TightWiki.Library.ConfirmActionHelper.GenerateDangerLink("This will permanently delete the specified page, all revisions and attachments. Continue?",
                                 "Purge", "/Admin/PurgeDeletedPage/" + @p.Id, Context.Request.Path.Value))
                    </td>
                </tr>
            }
        </table>

        @Html.Raw(TightWiki.Library.PageSelectorGenerator.Generate(Context.Request.QueryString, Model.PaginationPageCount))
    }
}
