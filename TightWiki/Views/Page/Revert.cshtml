@model TightWiki.Models.ViewModels.Page.PageRevertViewModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var wikiContext = ViewData["WikiContext"] as TightWiki.WikiContextState ?? throw new Exception("Wiki State Context cannot be null.");
}

<table class="fixedTable100" border="0" cellspacing="0" cellpadding="0">
    <tbody>
        <tr>
            <td height="52" valign="middle" align="left">
                @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <div class="alert alert-danger">@Html.Raw(Model.ErrorMessage)</div>
                }
                @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                {
                    <div class="alert alert-success">@Html.Raw(Model.SuccessMessage)</div>
                }

                <div class="panel panel-info">
                    <div class="card-header"><strong>Revert to revision @wikiContext.PageRevision?</strong></div>
                    <div class="card-body">

                        <strong>Reverting "@Model.PageName" from revision @Model.MostCurrentRevision to @wikiContext.PageRevision will rollback @Model.CountOfRevisions changes.</strong><br />
                        Reverting does not mean that changes will be lost however, the revert process will create a new revision with the reverted changes.<br /><br />
                        Are you sure you want to continue?<br /><br />

                        @using (Html.BeginForm())
                        {
                            <div class="form-group"><button type="submit" class="btn btn-danger rounded-0" name="IsActionConfirmed" value="true">Yes</button>&nbsp;&nbsp;<button type="submit" class="btn btn-success rounded-0" name="IsActionConfirmed" value="false">No</button></div>
                        }
                    </div>
                </div>
            </td>
        </tr>
    </tbody>
</table>
