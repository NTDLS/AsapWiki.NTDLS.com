@model TightWiki.Models.ViewModels.Profile.AccountProfileViewModel
@{
    Layout = "/Views/Shared/_Layout.cshtml";
}

<div class="card">
    <div class="card-header"><h3>Account</h3></div>
    <div class="card-body">
        <font size="4" face="ARIAL,HELVETICA">
            This is your profile, do with it what you may.<br /><br />
        </font>

        @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
        {
            @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
        }

        <table class="fixedTable100" border="0" cellpadding="0">
            <tbody>
                <tr>
                    <td height="52" valign="middle" align="left">

                        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                        {
                            <div class="alert alert-danger">@Html.Raw(Model.ErrorMessage)</div>
                        }
                        @if (!string.IsNullOrEmpty(Model.SuccessMessage))
                        {
                            <div class="alert alert-success">@Html.Raw(Model.SuccessMessage)</div>
                        }

                        @using (Html.BeginForm(null, null, null, FormMethod.Post, true, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()

                            <table border="0">

                                <tr class="padded">
                                    <td width="200"><strong>Avatar</strong></td>
                                    <td>
                                        @Html.HiddenFor(m => m.AccountProfile.UserId)
                                        @Html.HiddenFor(m => m.AccountProfile.Navigation)
                                        @if (@Model.AccountProfile.Navigation != "")
                                        {
                                            <img src="/Profile/@Model.AccountProfile.Navigation/Avatar?max=150" />

                                            <br />

                                            <br />
                                        }
                                        <input type="file" id="Avatar" name="Avatar" onchange="fileCheck(this);" />
                                    </td>
                                </tr>

                                <tr><td colspan="2"><div class="text-danger">@Html.ValidationMessageFor(m => m.AccountProfile.EmailAddress)</div></td></tr>
                                <tr class="padded">
                                    <td><strong>@Html.LabelFor(m => m.AccountProfile.EmailAddress)</strong></td>
                                    <td>
                                        @Html.DisplayFor(m => m.AccountProfile.EmailAddress, new { @class = "input-control" })
                                    </td>
                                </tr>

                                <tr><td colspan="2"><div class="text-danger">@Html.ValidationMessageFor(m => m.AccountProfile.AccountName)</div></td></tr>
                                <tr class="padded">
                                    <td><strong>@Html.LabelFor(m => m.AccountProfile.AccountName)</strong></td>
                                    <td>
                                        @Html.TextBoxFor(m => m.AccountProfile.AccountName, new { @class = "input-control" })
                                    </td>
                                </tr>

                                <tr><td colspan="2"><div class="text-danger">@Html.ValidationMessageFor(m => m.AccountProfile.FirstName)</div></td></tr>
                                <tr class="padded">
                                    <td><strong>@Html.LabelFor(m => m.AccountProfile.FirstName)</strong></td>
                                    <td>
                                        @Html.TextBoxFor(m => m.AccountProfile.FirstName, new { @class = "input-control" })
                                    </td>
                                </tr>

                                <tr><td colspan="2"><div class="text-danger">@Html.ValidationMessageFor(m => m.AccountProfile.LastName)</div></td></tr>
                                <tr class="padded">
                                    <td><strong>@Html.LabelFor(m => m.AccountProfile.LastName)</strong></td>
                                    <td>
                                        @Html.TextBoxFor(m => m.AccountProfile.LastName, new { @class = "input-control" })
                                    </td>
                                </tr>

                                <tr><td colspan="2"><div class="text-danger">@Html.ValidationMessageFor(m => m.AccountProfile.Role)</div></td></tr>
                                <tr class="padded">
                                    <td><strong>@Html.LabelFor(m => m.AccountProfile.Role)</strong></td>
                                    <td>
                                        @Html.DisplayFor(m => m.AccountProfile.Role, new { @class = "input-control" })
                                    </td>
                                </tr>

                                <tr><td colspan="2"><div class="text-danger">@Html.ValidationMessageFor(m => m.AccountProfile.Country)</div></td></tr>
                                <tr class="padded">
                                    <td><strong>@Html.LabelFor(m => m.AccountProfile.Country)</strong></td>
                                    <td>
                                        <select name="AccountProfile.Country" id="AccountProfile.Country">
                                            <option value="" style="color:#ccc !important;">
                                                Select a country
                                            </option>
                                            @foreach (var item in Model.Countries)
                                            {
                                                <option value="@item.Value" selected=@(Model.AccountProfile.Country == item.Value ? "selected" : null)>
                                                    @item.Text
                                                </option>
                                            }
                                        </select>
                                    </td>
                                </tr>

                                <tr><td colspan="2"><div class="text-danger">@Html.ValidationMessageFor(m => m.AccountProfile.Language)</div></td></tr>
                                <tr class="padded">
                                    <td><strong>@Html.LabelFor(m => m.AccountProfile.Language)</strong></td>
                                    <td>
                                        <select name="AccountProfile.Language" id="AccountProfile.Language">
                                            <option value="" style="color:#ccc !important;">
                                                Select a language
                                            </option>
                                            @foreach (var item in Model.Languages)
                                            {
                                                <option value="@item.Value" selected=@(Model.AccountProfile.Language == item.Value ? "selected" : null)>
                                                    @item.Text
                                                </option>
                                            }
                                        </select>
                                    </td>
                                </tr>

                                <tr><td colspan="2"><div class="text-danger">@Html.ValidationMessageFor(m => m.AccountProfile.TimeZone)</div></td></tr>
                                <tr class="padded">
                                    <td><strong>@Html.LabelFor(m => m.AccountProfile.TimeZone)</strong></td>
                                    <td>
                                        <select name="AccountProfile.TimeZone" id="AccountProfile.TimeZone">
                                            <option value="" style="color:#ccc !important;">
                                                Select a time-zone
                                            </option>
                                            @foreach (var item in Model.TimeZones)
                                            {
                                                <option value="@item.Value" selected=@(Model.AccountProfile.TimeZone == item.Value ? "selected" : null)>
                                                    @item.Text
                                                </option>
                                            }
                                        </select>
                                    </td>
                                </tr>

                                <tr><td colspan="2"><div class="text-danger">@Html.ValidationMessageFor(m => m.AccountProfile.Biography)</div></td></tr>
                                <tr class="padded">
                                    <td><strong>@Html.LabelFor(m => m.AccountProfile.Biography)</strong></td>
                                    <td>
                                        @Html.TextAreaFor(m => m.AccountProfile.Biography, new { style = "width:100%;height:200px", Name = "Biography" })
                                    </td>
                                </tr>

                                <tr class="padded">
                                    <td>&nbsp;</td>
                                    <td>
                                        <div class="form-group"><button type="submit" class="btn btn-primary rounded-0">Save!</button></div>
                                    </td>
                                </tr>
                            </table>
                        }
                        <br />

                        <form action="/Profile/Delete"><button type="submit" class="btn btn-danger">Delete Account</button></form>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
